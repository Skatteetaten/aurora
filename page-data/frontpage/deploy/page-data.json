{"componentChunkName":"component---src-templates-documentation-template-js","path":"/frontpage/deploy/","result":{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"how-we-deploy","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#how-we-deploy","ariaLabel":"how we deploy permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"How we deploy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A deploy starts in the AuroraAPI, triggered from one of the user facing clients ("},{"type":"element","tagName":"a","properties":{"href":"/aurora/documentation/openshift/#ao"},"children":[{"type":"text","value":"AO"}]},{"type":"text","value":" and "},{"type":"element","tagName":"a","properties":{"href":"/aurora/documentation/openshift/#aurora-konsoll"},"children":[{"type":"text","value":"Aurora Konsoll"}]},{"type":"text","value":"), or automatically from the build pipeline. The API extracts and merges relevant parts of the specified AuroraConfig in order to create an AuroraDeploymentSpec for the application being deployed."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"From the AuroraDeploymentSpec we provision resources in our existing infrastructure and generate OpenShift objects that are applied to the cluster. The application is then rolled out either via importing a new image or triggering a new deploy. The deploy result is saved for later inspection."}]}],"data":{"quirksMode":false}},"headings":[{"value":"How we deploy","depth":2}],"fields":{"slug":"/frontpage/deploy/"},"frontmatter":{"title":""}}},"pageContext":{"slug":"/frontpage/deploy/"}},"staticQueryHashes":["1869194549"],"slicesMap":{}}