{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2 id=\"how-we-build\"><a href=\"#how-we-build\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How we build</h2>\n<p>Applications are built, tested and verified in our custom Jenkins CI/CD pipeline. They are then passed on to the proprietary CustomBuilder, Architect, as zip files called DeliveryBundles. A DeliveryBundle contains the application files and metadata.</p>\n<p>Builds are triggered in one of several ways;</p>\n<ul>\n<li>via the CI/CD pipeline from commits tagged as <a href=\"/aurora/documentation/openshift/#deployment-and-patching-strategy\">semanic releases</a> or as feature branch SNAPSHOTS.</li>\n<li>as a binary-build directly from a development machine. This will buypass Jenkins and read the DeliveryBundle from stdin.</li>\n<li>from ImageChange triggers when either the CustomBuilder or the Base Image changes. See our <a href=\"/aurora/documentation/openshift/#deployment-and-patching-strategy\">patching strategy</a>.</li>\n</ul>","fields":{"slug":"/frontpage/build/"}}},{"node":{"html":"<h2 id=\"why-did-you-make-things-in-house\"><a href=\"#why-did-you-make-things-in-house\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why did you make things in-house?</h2>\n<ul>\n<li>\n<p>We have many different development teams that work on our clusters and we want them to be able to work in <strong>isolation</strong>. Both Kubernetes and OpenShift lack support for groups of users that can adminster subsets of cluster objects. We have created a concept called <strong>affiliation</strong> to support this.</p>\n</li>\n<li>\n<p>The ability to deploy applications to <strong>several clusters</strong> in one command is highly desired within our organization. Our network infrastructure implies that we need to have multiple clusters.</p>\n</li>\n<li>\n<p>When configuring how to deploy applications and projects we want to avoid duplication. Our <strong>declarative</strong> config format AuroraConfig supports <strong>composition</strong> with <strong>sane defaults</strong>.</p>\n</li>\n</ul>","fields":{"slug":"/frontpage/why/"}}},{"node":{"html":"<h2 id=\"faster-development-and-more-efficient-ops\"><a href=\"#faster-development-and-more-efficient-ops\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Faster development and more efficient ops</h2>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Platform_as_a_service\">PaaS</a> built upon <a href=\"http://www.openshift.com\">OpenShift</a></li>\n<li>At the core of the platform is our custom declarative config format AuroraConfig and the <a href=\"/aurora/documentation/openshift/#the-aurora-api\">AuroraAPI</a>.</li>\n<li>The AuroraAPI supports deploying applications and observing their status while running.</li>\n<li>Applications are built in a common Jenkins CI/CD pipeline, supported by a <a href=\"https://docs.openshift.org/latest/creating_images/custom.html\">CustomBuilder</a> called <a href=\"/aurora/documentation/openshift/#the-application-image-builder-architect\">Architect</a>.</li>\n</ul>","fields":{"slug":"/frontpage/faster-development/"}}},{"node":{"html":"<h2 id=\"observe-what-is-running\"><a href=\"#observe-what-is-running\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Observe what is running</h2>\n<p>We augment the application status data that OpenShift already keeps by regularly inspecting the master API and the management interface (part of our runtime contract) of the applications. The extra status data collected is compiled into a separate status value called <a href=\"/aurora/documentation/openshift/#application-monitoring\">AuroraStatus</a>. This allow us, among other things, to create custom wallboards, alert integrations, rate of errors and 95% percentile response times.</p>","fields":{"slug":"/frontpage/observe/"}}},{"node":{"html":"<h2 id=\"how-we-deploy\"><a href=\"#how-we-deploy\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How we deploy</h2>\n<p>A deploy starts in the AuroraAPI, triggered from one of the user facing clients (<a href=\"/aurora/documentation/openshift/#ao\">AO</a> and <a href=\"/aurora/documentation/openshift/#aurora-console\">AuroraConsole</a>), or automatically from the build pipeline. The API extracts and merges relevant parts of the specified AuroraConfig in order to create an AuroraDeploymentSpec for the application being deployed.</p>\n<p>From the AuroraDeploymentSpec we provision resources in our existing infrastructure and generate OpenShift objects that are applied to the cluster. The application is then rolled out either via importing a new image or triggering a new deploy. The deploy result is saved for later inspection.</p>","fields":{"slug":"/frontpage/deploy/"}}},{"node":{"html":"<h1 id=\"introduction\"><a href=\"#introduction\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h1>\n<p>Welcome to the Aurora OpenShift Platform of the <a href=\"http://skatteetaten.no/en/person/\">Norwegian Tax Administration (NTA)</a> on GitHub. The Norwegian Tax\nAdministration is an agency under the authority of the Ministry of Finance and is responsible for taxation and the\npopulation register.</p>\n<p>These pages on GitHub are the home of the initiative to open source the platform that runs part of the NTA's digital tax\nand customs services; the Aurora OpenShift Platform.</p>\n<p>This document will describe what the Aurora OpenShift Platform is and how it came to be. It will also cover how we\nare organized for developing software and our development process - including how we use the platform to build and\ndeploy our applications, and our guidelines and requirements to applications using the platform.</p>\n<h1 id=\"a-short-history\"><a href=\"#a-short-history\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A Short History</h1>\n<p>The work on what would become the Aurora OpenShift Platform started late in 2014 in the wake of a major project to\nmodernize the handling of the foundational data for most tax calculations in Norway. The project identified during its\ncourse the need for a common platform for running and handling the vast amount of micro services across development,\ntest and reference environments that the project produced, and that would be produced by even larger projects down the\nline.</p>\n<p>A technology evaluation phase revealed the Red Hat OpenShift Container Platform (then Red Hat OpenShift Origin 3.0) to\nbe the most appropriate technology to base a new common platform on. Most of 2015 was spent on getting the first few\napplications successfully running on OpenShift and device a suitable strategy for running, configuring and managing all\nthe applications that would, in time, be running on the platform.</p>\n<p>As time passed it became clear that Kubernetes based\nOpenShift was an extremely capable platform for running our applications. We also realized that handling integration\nwith the other infrastructure components (like database servers, logging/metrics/monitoring tools, and security\ninfrastructure), and handling the sheer amount of application instances and application runtime environments with all\ntheir associated application versions, configurations and delivery schedules required more than OpenShift alone could\nprovide.</p>\n<p>In the course of getting the first few applications running on OpenShift, quite a few departments of the\nNTA had been involved in some sort of automation and integration work with the platform; some of them major\nundertakings. By the end of 2016, as the tools and services that provided those integrations matured and got structured,\na select set of them became collectivly known as the Aurora OpenShift Platform.</p>\n<p>In December 2016 it was decided that as much possible of the Aurora OpenShift Platform should be open sourced under\nan APL 2.0 compatible license.</p>\n<h1 id=\"requirements-for-the-aurora-openshift-platform\"><a href=\"#requirements-for-the-aurora-openshift-platform\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Requirements for the Aurora OpenShift Platform</h1>\n<p>The Norwegian Tax Administration maintains millions of lines of code and employs 800 people in software development,\nIT operations, management and supporting roles. When the need for new software arises - to either replace existing\nsystems or to handle new or changed responsibilities - a project is created for that purpose. The projects are often\nsupported with external consultants, and when complete they are transferred to the Line. The Line will\nmaintain and support the software over time, usually decades, and will initially be staffed with personnel from both the\nproject and from the Line itself.</p>\n<p>Even before we started exploring OpenShift we knew that we would have to automate integration with our existing\ninfrastructure regardless of the platform we would end up using - so doing some sort of common initiative to provide\nautomation and integration services was given from the get-go. As we familiarized ourselves with OpenShift we saw\nthat there were several other areas that would also benefit from a central, common effort.</p>\n<p>It was important to us that supporting applications on the platform developed by different teams, often with personnel\nunfamiliar with developing software for the NTA, should be pretty much the same regardless of who developed it. For\ninstance, rolling out a Java Virtual Machine patch should be exactly the same for all applications, and it should be\npossible for us to roll out such a patch for all applications across all environments in one go. Similarly, the\nprocess of upgrading an application developed by one team deployed to a specific environment should be exactly the\nsame for any other application developed by a completely different team. Additionally, we wanted configuration to be\nhandled the same for all applications across all environments.</p>\n<p>One of the things that struck us after getting some experience with OpenShift was how flexible it was to work with.\nAlthough the platform certainly comes with its fair share of requirements and idiosyncrasies, we found that there was\nhardly anything we were not able to do. However, we also very quickly realized that with all this flexibility comes a\nquite steep learning curve on how \"to do things right\", and allowing individual teams to freely develop their\nown strategies on how to use OpenShift would bear with it a high cost of entry, slower internal adoption and\ndifficulties streamlining maintenance and deployment activities across teams. Also, there were few obvious upsides to\nletting teams freely use OpenShift their own way. For instance, we were hard press to find good answers to questions\nlike;</p>\n<ul>\n<li>What would be the benefit for teams to develop and maintain their own base image for their Java applications instead\nof collaborating on one?</li>\n<li>What would be the benefit for teams to device their own Docker Image build processes instead of adopting a common one?</li>\n<li>What would be the benefit for teams to develop and maintain their own scripts and tools for handing deployment and\nconfiguration across different environments?</li>\n</ul>\n<p>Going back and forth, we almost always ended up at \"not a whole lot\". It became pretty clear that a common effort to\ncoordinate how the teams should use the platform and maintain reusable components and services was a good idea.</p>\n<h1 id=\"what-is-the-aurora-openshift-platform\"><a href=\"#what-is-the-aurora-openshift-platform\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is the Aurora OpenShift Platform?</h1>\n<p>The Aurora OpenShift Platform is everything the Norwegian Tax Administration has developed to support\napplication configuration, deployment and management on OpenShift, common application base images, and a common build\nand versioning mechanism for application archives and Docker images. A collect set of infrastructure integration and\nautomation components are also considered part of the platform.</p>\n<p>The main user facing components implementing these mechanisms are:</p>\n<ul>\n<li>Aurora Konsoll: The most prominent feature of the Aurora OpenShift platform is the Aurora Konsoll. The Aurora Konsoll is a custom\nbuilt web application that we use in conjunction with the platform provided OpenShift Console to better handle\napplications across teams and environments.</li>\n<li><a href=\"https://github.com/Skatteetaten/ao\">AO</a>: The Aurora OpenShift Command Line Client. Our custom built CLI that works with a set of high level configuration\nfiles that helps managing applications and configuration across environments.</li>\n<li>AuroraConfig: A DSL config format for describing applications and groupings of applications (environments)</li>\n<li>The Aurora API: The API that implements all our custom services. Used by the Aurora Konsoll and AO. <a href=\"https://github.com/Skatteetaten/gobo\">Gobo</a>, <a href=\"https://github.com/Skatteetaten/boober\">Boober</a>, <a href=\"https://github.com/Skatteetaten/mokey\">Mokey</a>, <a href=\"https://github.com/Skatteetaten/dbh\">DBH</a>, <a href=\"https://github.com/Skatteetaten/gillis\">Gillis</a></li>\n<li><a href=\"https://github.com/Skatteetaten/architect\">Architect</a>: A Docker image that implements the image build process for all our supported runtime technologies</li>\n<li>Base Images: A set of Alpine Linux based Docker Images that all our applications are built from. <a href=\"https://github.com/Skatteetaten/wingnut\">Wingnut</a> and <a href=\"https://github.com/Skatteetaten/wrench\">Wrench</a></li>\n</ul>\n<p>The coming sections will describe these components in more detail.</p>\n<h1 id=\"how-we-develop-and-build-our-applications\"><a href=\"#how-we-develop-and-build-our-applications\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How we Develop and Build our Applications</h1>\n<h2 id=\"coding-and-application-build-requirements-delivery-bundle\"><a href=\"#coding-and-application-build-requirements-delivery-bundle\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Coding and Application Build Requirements: Delivery Bundle</h2>\n<p>Coding an application targeted at the Aurora OpenShift Platform follows closely the principles of the\n<a href=\"https://12factor.net/\">Twelve-Factor App</a> from Heroku. Additionally the following requirements must be met;</p>\n<ul>\n<li>The application must run on the JVM and, currently, must be written exclusively in Java. Node is supported when\ndeveloping <a href=\"http://samnewman.io/patterns/architectural/bff/\">Backends for Frontends</a>, but then only with very limited\nfunctionality.</li>\n<li>The application must currently be built using Apache Maven.</li>\n<li>\n<p>The delivery mechanism is an assembly bundle zip file uploaded to our internal Nexus registry. We call this zip file\na Leveransepakke (Delivery Bundle)</p>\n<ul>\n<li>The Delivery Bundle must contain a lib folder with all the jars for the application.</li>\n<li>The Delivery Bundle must contain a metadata/openshift.json file to provide build time metadata to the application\nimage building process (Architect). This includes among other things information used to generate a start script for\nthe application and metadata used to label the Docker image.</li>\n</ul>\n</li>\n<li>We support both versioned releases and snapshots, but versioned releases must follow the\n<a href=\"http://semver.org/\">Semantic Versioning</a> system.</li>\n<li>The application must implement our proprietary management interface. This interface is described in more detail\nlater.</li>\n</ul>\n<p>Additionally we prefer that the applications are built via Jenkins and that the source repository of the application\ncontains a Jenkinsfile that describes the build process. Ideally, the Jenkinsfile uses our common Jenkins pipeline\nscripts (making the Jenkinsfile less than 10 lines of code).</p>\n<p>We provide a <a href=\"https://www.thoughtworks.com/radar/techniques/tailored-service-template\">Tailored Service Template</a> <a href=\"https://github.com/Skatteetaten/openshift-reference-springboot-server\">openshift-reference-springboot-server</a> for a\nstandard application that fulfill all these demands that teams building new applications can use to get started.</p>\n<h2 id=\"the-image-build-process\"><a href=\"#the-image-build-process\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Image Build Process</h2>\n<p>Once the Delivery Bundle has been uploaded to Nexus we trigger (or create) an OpenShift BuildConfig for that specific\nartifact (identified by the groupId and artifactId that was used when uploading to Nexus). We also provide the version\nof the artifact that was just built as a parameter to the build.</p>\n<p>The BuildConfig is configured to use the\nOpenShift Container Platform’s <a href=\"https://docs.openshift.com/container-platform/3.11/dev_guide/builds/build_strategies.html#custom-strategy-options\">Custom build strategy</a>\nand we have created our own Docker image, dubbed Architect, to build an application Docker image from the Delivery\nBundle based on our Java base image, dubbed Wingnut.</p>\n<p>In addition to building the application image, Architect is also responsible for tagging the produced image with\nseveral application and platform specific version tags that is the underpinning of our flexible deployment strategy.</p>\n<p>Architect, Wingnut, our versioning strategy and our deployment strategy are described in more detail below.</p>\n<p>In addition to passing parameters to Architect, the BuildConfig is also configured with two\n<a href=\"https://docs.openshift.com/container-platform/3.11/dev_guide/builds/build_inputs.html#image-source\">ImageChange triggers</a>.\nOne for Architect and one for Wingnut. This allows us to use OpenShift to automatically trigger a build of the most\nrecent version of any application when we release a new version of either Architect or Wingnut.</p>\n<h2 id=\"the-application-image-builder-architect\"><a href=\"#the-application-image-builder-architect\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Application Image Builder: Architect</h2>\n<p>Architect is a Docker image built upon Alpine Linux that is responsible for building all our application images. It is\ndesigned to work as an OpenShift\n<a href=\"https://docs.openshift.com/container-platform/3.11/creating_images/custom.html\">CustomBuilder</a> and is mostly triggered\nfrom BuildConfigs. It will download a prebuilt Delivery Bundle artifact from Nexus based on the groupId, artifactId and\nversion (GAV) provided as parameters and inspect the metadata/openshift.json-file in the bundle to determine the\ntechnology used by the application. Based on the technology used, a suitable base image will be selected and the build\nprocess determined. The build processes for the different technologies are implemented as generated Dockerfiles and will\nvary depending on the runtime technology used.</p>\n<h3 id=\"building-java-applications\"><a href=\"#building-java-applications\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Building Java Applications</h3>\n<p>In addition to adding the Java application from the Delivery Bundle, a Java build will also add a custom certificate\nstore and our common logback.xml configuration file to the generated image. Applications are encouraged to use this\nlogback-file instead of providing their own to make sure that they are in compliance with the logging requirements.</p>\n<p>For our Java applications, Architect supports generating a start script based on a few parameters set in the\nmetadata/openshift.json-file. Though not a requirement at this time (applications may provide their own start script),\nproviding a mechanism for automatically generating a start script has a few major benefits;</p>\n<ul>\n<li>Getting a start script for Java right on OpenShift is actually quite hard. The script must make sure that the main\nprocess is properly backgrounded, while still handling signals like SIGTERM. It must also trap the Java process to\nrewrite application exit codes; for instance, Java exits with 143, while OpenShift expects properly terminated\napplications to return 0. Additionally -Xmx must be set in relation to the available cgroup memory. Our generated start\nscript handles all these issues.</li>\n<li>We require that the Jolokia agent is enabled for all Java processes to enable the hawt.io integration in OpenShift.\nOur generated start script enables this by default.</li>\n</ul>\n<p>Additionally, the generated start script will create a deterministic class path from the lib folder, set JVM<em>OPTS and\nAPPLICATION</em>ARGS from the openshift.json file and optionally enable remote debugging.</p>\n<p>The start script we use is heavily inspired by several other similar solutions, chief among them\n<a href=\"https://github.com/fabric8io-images/run-java-sh\">run-java-sh</a>.</p>\n<h3 id=\"common-steps\"><a href=\"#common-steps\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Common Steps</h3>\n<p>In addition to generating application and technology specific start scripts we also provide a required wrapper script\nthat acts as the actual entry point of the application Docker image. This script will, among a few other\nthings, read configuration files that have been mounted into the container and make them available as environment\nvariables for the application. This process is described in more detail later.</p>\n<p>After the application Docker image has been built it is pushed to our internal Docker registry. We also tag the image\nwith several version tags to support our deployment strategy. Our versioning strategy is described below.</p>\n<h2 id=\"image-versioning-strategy-the-auroraversion\"><a href=\"#image-versioning-strategy-the-auroraversion\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Image Versioning Strategy: The AuroraVersion</h2>\n<p>The structure of the final application Docker image is affected not only by the application Delivery Bundle, but also\non the specific version of Architect that was used to build the image, and the version of the base image that was used.\nThis means that even if the application version does not change, we may still produce entirely different images by\nchanging the version of Architect or the base image. To reflect these dependencies, when tagging the image with the\nfinal version, the version tag used contains not only the application version, but also the versions of Architect and\nthe base image, along with the base image name. We call this composite version tag the AuroraVersion and an example\ncan be seen in the diagram below;</p>\n<p><img src=\"/aurora/auroraVersion-de84d3d1f007514294f94b75bdeac7f5.png\" alt=\"AuroraVersion\"></p>\n<p>When the application has a semver compliant version we additionally push individual tags for the major version,\nfor the major and minor version combined, for the major, minor and patch version combined, and finally the\nlatest tag. An example is provided in the following diagram;</p>\n<p><img src=\"/aurora/versioning-a7efa1ef96cf1dbeb5b2eff868e4cccb.png\" alt=\"Versioning\"></p>\n<p>A snapshot version is a version string that ends with the literal \"-SNAPSHOT\", like \"1.0.0-SNAPSHOT\" or\n\"some<em>new</em>feature-SNAPSHOT\". When building a snapshot release, in addition to the AuroraVersion, we also push two\nsnapshot tags. Using \"some<em>new</em>feature-SNAPSHOT\" as an example we push</p>\n<ul>\n<li>SNAPSHOT-some<em>new</em>feature-{buildNumber}, where the buildNumber is fetched from Nexus</li>\n<li>some<em>new</em>feature-SNAPSHOT</li>\n</ul>\n<p>By applying this versioning strategy to our Docker images we in turn get tremendous flexibility when it comes to\ndeploying and patching our applications on OpenShift. Our deployment and patching strategy is described next.</p>\n<h2 id=\"deployment-and-patching-strategy\"><a href=\"#deployment-and-patching-strategy\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment and Patching Strategy</h2>\n<p>When deploying new applications to OpenShift we always use our proprietary AO command line tool. This tool ensures that all\ndeployed applications follow the same basic pattern. AO is described in depth later so we will not go\ninto all the details here, but for the purposes of describing our deployment and patching strategy we need to highlight\na couple of the objects that AO generates.</p>\n<p>Based on the configuration files given to AO, we generate the OpenShift objects that are required to run the\napplication. We generate one\n<a href=\"https://docs.openshift.com/container-platform/3.11/architecture/core_concepts/builds_and_image_streams.html#image-streams\">ImageStream</a>\nfor each application we deploy. This ImageStream contains one (and only one) scheduled tag. We then generate a\n<a href=\"https://docs.openshift.com/container-platform/3.11/architecture/core_concepts/deployments.html#deployments-and-deployment-configurations\">DeploymentConfig</a>\nwith a single container that uses the previously generated ImageStream and scheduled tag as its image reference. We\nalso register a ImageChangeTrigger to trigger redeploys when the tag in the ImageStream changes.</p>\n<p>To deploy the application we simply change the Docker tag that the scheduled tag in the ImageStream points to to the\napplication version we want to run. The application version can be any of the tags we have previously tagged the image\nwith (see \"Image Versioning Strategy: The AuroraVersion\"), and since the tag in the image stream is scheduled, it will\npick up any changes to the tag that may occur as a result of building new application images. For instance, we can set\nthe scheduled tag in the ImageStream to any of the following tags to determine the deployment strategy for a particular\napplication:</p>\n<p>In the following list, the term infrastructure refers to the versions of the base image and Architect in the\nAuroraVersion string.</p>\n<ul>\n<li>use <strong>latest</strong> to automatically deploy the latest image with a semver compliant version</li>\n<li>use <em>1</em> to automatically deploy the newest image for a major version (any 1.x.y version) of an application. Following\nthe semver semantics, this includes all new features and bugfixes but no breaking changes. Infrastructure changes are\nalso included.</li>\n<li>use <em>1.1</em> to automatically deploy the newest image for a minor version (any 1.1.x version) of an application.\nFollowing the semver semantics, this includes all bugfixes. Infrastructure changes are also included.</li>\n<li>use <em>1.1.1</em> to automatically deploy the newest image for a patch version (any 1.1.1 version) of an application.\nFollowing the semver semantics, this actually excludes any other application version from being deployed, and hence,\nthe application will only be deployed if the infrastructure changes.</li>\n<li>use the full <strong>AuroraVersion</strong> of a release to pin the deployment to that specific combination of application version\nand infrastructure. OpenShift will never automatically redeploy this application since the AuroraVersion tag will never\nchange for an image.</li>\n<li>use <strong>SNAPSHOT-versionname</strong> to get the latest build from a snapshot</li>\n</ul>\n<p>Like we mentioned in the section \"The Image Build Process\" the OpenShift BuildConfig is configured with two\nImageChange triggers. One for Architect and one for the base image. This allows us to automatically retrigger the build\nof an application image when new versions of either Architect or the base image are released. Commonly, when releasing\nfor instance a new version of Wingnut, our base image for Java, with a new Java Runtime Environment version, hundreds of\napplication images are automatically rebuilt - and in many cases, based on the deployment strategy for the individual\napplications, automatically redeployed by the platform.</p>\n<h2 id=\"application-configuration-strategy\"><a href=\"#application-configuration-strategy\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Application Configuration Strategy</h2>\n<p>Arriving at a strategy for configuring our applications for particular environments (development, test, etc) was a\nlong and winding road, taking us back to the drawing board several times. We explored many of the off the shelf\nsolutions for handling this, but in the end we did not want a runtime dependency for all our applications on a\nconfiguration service. In addition we struggled to find a product that actually suited our needs and fit into our\nnetwork infrastructure.</p>\n<p>We wanted a solution that would let us maintain several sets of configurations for an application, each set tailored\nto the environment the application would run in, and we also needed to support several versions of the configuration\nschema at the same time. For instance, version 1.0.0 of an application will often be configured differently than version\n2.0.0 of that same application.</p>\n<p>What we ended up doing was to let AO, from the AO config (described later), create a ConfigMap with a file that\ncontains the configuration for the application in the environment it is being deployed to. This configuration file is\nmounted in the application Docker container by the DeploymentConfig, read by the entrypoint wrapper script\n(described in \"The Application Image Builder: Architect\") and exposed as environment variables for the application.</p>\n<p>Using only environment variables for configuration allows us to configure applications using completely different\nruntime technologies the same way. In addition, many of our existing applications running outside OpenShift were already\nconfigured using environment variables, and thus would require little modification to their configuration handling to\nadapt to running on OpenShift. And, finally, we have no application runtime dependencies to third party services for\nconfiguration that may or may not be available at application startup, significantly reducing risk.</p>\n<h2 id=\"development-flow\"><a href=\"#development-flow\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Development flow</h2>\n<p>In order to support rapid development on the platform a variant of the image build process has been created. The Architect\nbuilder has received support for binary builds. This means that you can build a Delivery Bundle locally and then send it directly to the builder.</p>\n<h1 id=\"ao\"><a href=\"#ao\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AO</h1>\n<p><a href=\"https://github.com/Skatteetaten/ao\">AO</a> (Aurora OpenShift CLI) is our custom command line client for deploying applications to OpenShift.</p>\n<p>We started out using <a href=\"https://docs.okd.io/latest/dev_guide/templates.html\">OpenShift Templates</a> in 2015. A go-template based template engine that takes a list of parameters and replaces it into objects before applying them to the cluster. For our needs this technology was and is severly lacking. - no support for conditional logic - no support for loops - no support for optionaly including and entire object We then created a bash wrapper around the templates that would generate objects for it and modify them afterwards. The config for this bash wrapper resided along side the application code. After som experience with this we found several issues with it - writing good bash is hard and testing tools are lacking - no client-server model, so we had to duplicate functionality in web dashboard - you had to commit and change code in repo to change config. That means triggereing new jenkins builds when not really needed. This lead to the design of the start of the AuroraAPI with the <a href=\"https://github.com/Skatteetaten/boober\">Boober</a>, <a href=\"/aurora/documentation/aurora-config\">AuroraConfig</a> and <a href=\"https://github.com/Skatteetaten/ao\">AO</a> components.</p>\n<p>The need for a custom command line client became apparent when we saw that the teams started developing their own\nscripts for deploying applications across different environments. These scripts quickly became quite complex,\nand while basically solving the same problems, they were implemented differently. We also wanted to avoid the teams\nhaving to maintain a huge set of OpenShift yaml or json files for their applications and because of the very limited\nfunctionality in the OpenShift template mechanism, the templates we created to mitigate that were not powerful enough\non their own to be used entirely without some manipulation through scripting.</p>\n<p>The first versions of AO interacted with OpenShift and supporting infrastructure directly, and though useful, it was\nhard to extend, reuse functionality and roll out fixes. Recent versions of AO is a simple frontend for the Aurora\nAPI, our core automation API on the Aurora OpenShift Platform. Over time, AO has matured into a tool not only for\ncoordinating deployments to OpenShift, but also for triggering other infrastructure automation tasks.</p>\n<p>Finally, a custom command line client would allow us to more easily make sure that the applications were deployed and\nconfigured the same, allowing us to make assumptions about applications when creating the Aurora Konsoll.</p>\n<p>AO is driven by a set of configuration files (AuroraConfig) that describe how applications should be deployed and configured in\ndifferent environments. The configuration files are organized in a hierarchy and are cascading, allowing us to share and\noverwrite configuration options across applications and environments. AO sends these configuration files to the\nAurora API which in turn creates or updates the appropriate OpenShift objects (like DeploymentConfig, Service, Route)\nand performs other infrastructure automation tasks.</p>\n<p>The following features can be configured in the AuroraConfig configuration</p>\n<ul>\n<li>The application to deploy</li>\n<li>Deployment strategy; the version to deploy</li>\n<li>What database schemas to generate/reuse</li>\n<li>Should a security token for secure communication be generated?</li>\n<li>Config variables</li>\n<li>Should a Route be generated for this application</li>\n<li>Enable rolling upgrades</li>\n<li>Configure Splunk index</li>\n<li>Create other routes/automate opening traffic in network infrastructure (webseal/BiG-IP)</li>\n</ul>\n<p>The setup process of AO is idempotent so calling it several times will only update the required parts in the old\nobjects. After running AO on one single application the objects created on OpenShift is illustrated by the following\ndiagram.</p>\n<p><img src=\"/aurora/deploy-b1e861035dc6f58fd040e56e486ca600.png\" alt=\"Deploy\"></p>\n<h1 id=\"aurora-konsoll\"><a href=\"#aurora-konsoll\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Aurora Konsoll</h1>\n<p>The Aurora Konsoll is our custom made companion web application to the of-the-shelf OpenShift Console. It does not\nreplace the OpenShift Console, nor does it try to, but it adds quite a bit of functionality that the OpenShift\nConsole does not have (and probably should not have). Some of it is related to viewing and manging infrastructure\nitems like firewall openings, proxy configurations, certificates and database schemas, and does not have anything to\ndo with OpenShift per se. Others take full advantage of the way we deploy our applications and provide powerful\nscreens for displaying, configuring, upgrading and monitoring applications for different teams across environments.</p>\n<h1 id=\"the-aurora-api\"><a href=\"#the-aurora-api\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Aurora API</h1>\n<p>The Aurora API is our platform automation API and provides endpoints used by both AO and the Aurora Konsoll. The main\nfeatures of the API includes;</p>\n<ul>\n<li>Execution of the instructions given by the AuroraConfig configuration files.</li>\n<li>Provides abstractions that builds on the OpenShift objects and other infrastructure objects, mainly\nAuroraApplication, AuroraDeploymentConfiguration, AuroraVersion and AuroraStatus.</li>\n<li>Endpoints for managing infrastructure components and applications, like performing upgrades and configuration\nchanges.</li>\n<li>Produce status metrics for an application on the platform. Fetches information from Docker registry, the cluster and the applications management interface.</li>\n<li>Miscellaneous tools to aid in development and debgging infrastructure issues.</li>\n</ul>\n<h1 id=\"application-monitoring\"><a href=\"#application-monitoring\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Application Monitoring</h1>\n<p>Although OpenShift provides many mechanisms for keeping applications running even when failures occur, of course, in the\nreal world applications sometimes, unavoidably, still go down. If it is your responsibility to monitor applications on\nOpenShift, the native user interface is not actually great for that. It can be hard to get an overview of the status\nof all applications in an OpenShift project/namespace, and it is nearly impossible to get such an overview across\nnamespaces. The support for providing application status to OpenShift is also quite limited; its either working\nproperly, or it is not, and getting feedback for application troubleshooting is nearly completely absent.</p>\n<p>We required quite a bit more of the platform to confidently monitor our applications, and one of the most prominent\nfeatures of the Aurora Konsoll, the Application Monitoring Wallboard, addresses this. It presents a matrix of\napplications and environments with all their associated statuses. The information in the wallboard is in part provided\nby OpenShift and in part by the applications themselves, everything made available to the Wallboard via the Aurora API.\nIn order for the Aurora API to provide all this information, the applications running on the Aurora OpenShift platform\nis required to implement our proprietary Management Interface (which is in part based on Spring Boot Actuator).</p>\n<p>Information from the Management Interface of the applications in combination with information we collect about the\napplications from OpenShift via the OpenShift API collectively contributes to an aggregated application status that we\ncall the AuroraStatus.</p>","fields":{"slug":"/documentation/openshift/"}}},{"node":{"html":"<h2 id=\"what-is-aurora-config\"><a href=\"#what-is-aurora-config\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is Aurora Config?</h2>\n<p>TLDR; <a href=\"#configuration-reference\">Take me to the Configuration Reference!</a></p>\n<p>Aurora Config is a custom file based configuration format developed by the Norwegian Tax Administration designed to be a concise\nrepresentation of how applications are configured and deployed across environments and clusters in an OpenShift\nbased infrastructure. Parts of the configuration format is generally reusable by anybody deploying to OpenShift, while\nother parts of it are designed to simplify integrations with specific third party components in our infrastructure.</p>\n<p>The conciseness of the format is derived from a highly opinionated way of deploying applications to OpenShift,\nproviding override options only when necessary.</p>\n<p>Config files are written either as Json or Yaml.</p>\n<p>Aurora Config is structured around a four level file structure with the top level being the most general and the bottom\nlevel, representing an application in a given environment, being the most specific - potentially overriding options set\nat higher levels. Each environment has its own folder with a separate file for each application in that environment,\nin addition to an about.yaml file describing the environment itself. The following table describes the different files;</p>\n<table>\n<thead>\n<tr>\n<th>File</th>\n<th>Name in AC</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>about.yaml</td>\n<td>global</td>\n<td>The <em>global</em> file is the most general file in an Aurora Config. All applications will inherit options set in this file.</td>\n</tr>\n<tr>\n<td>{app}.yaml</td>\n<td>base</td>\n<td>The <em>base</em> file contains general configuration for all instances of application {app} across all environments. All instances will inherit options set in this file and will potentially override options set in the <em>global</em> file.</td>\n</tr>\n<tr>\n<td>{env}/about.yaml</td>\n<td>env</td>\n<td>The <em>env</em> file contains general configuration for all applications in environment {env}. All applications in the environment will inherit options set in this file and potentially override options set in both the <em>base</em> file and <em>global</em> file.</td>\n</tr>\n<tr>\n<td>{env}/{app}.yaml</td>\n<td>app</td>\n<td>The <em>app</em> file contains specific configuration for application {app} in environment {env}. All options set in this file will potentially override options set in other files.</td>\n</tr>\n</tbody>\n</table>\n<p>For the applications App1 and App2, and the environments test and prod, a typical Aurora Config could then look like;</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── about.yaml     (Configuration for all applications in all environments)\n├── App1.yaml      (General configuration for App1)\n├── App2.yaml      (General configuration for App2)\n├── prod           (A folder named prod, representing the environment prod)\n│  ├── about.yaml  (Configuration for all applications in environment prod)\n│  ├── App1.yaml   (Configuration for App1 in environment prod)\n│  └── App2.yaml   (Configuration for App2 in environment prod)\n└── test           (A folder named test, representing the environment test)\n   ├── about.yaml  (Configuration for all applications in environment test)\n   ├── about-alternative.yaml  (Alternative Configuration for all applications in environment test)\n   ├── App1.yaml   (Configuration for App1 in environment test)\n   └── App2.yaml   (Configuration for App2 in environment test)</code></pre></div>\n<p>For a given <em>app</em> file, it is possible to change the <em>base</em> and <em>env</em> file if you want to compose your configuration\ndifferently than the default. For instance, you may need to deploy the same application in the same environment with\ndifferent name and configuration;</p>\n<p>File named \"test/App1Beta.yaml\"</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">baseFile</span><span class=\"token punctuation\">:</span> App1.yaml\n<span class=\"token key atrule\">envFile</span><span class=\"token punctuation\">:</span> about<span class=\"token punctuation\">-</span>alternative.yaml</code></pre></div>\n<p>In this scenario 'App1.yaml' would be used instead of 'App1Beta.yaml' (which does not exist) as the base file for the\nApp1Beta in the environment test. The env file about-alternative will be used instead of the standard about file.\nNote that env files must start with the prefix <code class=\"language-text\">about</code></p>\n<h2 id=\"deploymentspec-and-applicationid\"><a href=\"#deploymentspec-and-applicationid\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DeploymentSpec and ApplicationId</h2>\n<p>When the Aurora Config is processed a new object is generated for each <em>app</em> file, representing the configuration\ncollected from the <em>global</em> file, the <em>base</em> file for that application, the <em>env</em> file for the environment, and finally\nthe <em>app</em> file itself. This object is called the DeploymentSpec for the given application. The identifier for a\nDeploymentSpec, called ApplicationId, is the combination of environment name and application name. From the example\nabove we would get four DeploymentSpecs with the following ApplicationIds;</p>\n<ul>\n<li>prod/App1</li>\n<li>prod/App2</li>\n<li>test/App1</li>\n<li>test/App2</li>\n</ul>\n<h2 id=\"configuration-reference\"><a href=\"#configuration-reference\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration Reference</h2>\n<p>The following sections will describe the different configuration options that are available in each of the files. The\nexamples will use the YAML format for the config files since it is terser and easier on the eyes than JSON.</p>\n<h3 id=\"header\"><a href=\"#header\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Header</h3>\n<p>Some options are considered header options and are read in a separate step during the configuration parsing process.\nThis allows us to set defaults and make available values in the header for variable substitution in the other\nconfiguration options. In order to include these into a field surround them with '@', for instance.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">config/cluster : &quot;@cluster@&quot;</code></pre></div>\n<p>Which options are available for substitution is indicated in the following tables.</p>\n<p>Some configuration options can only be set in the <em>global</em> about file and the <em>env</em> file. These are typically options that\nare only relevant for configuring the environment, for instance environment name, permissions and env.ttl (time to live).\nSince environments have their own folder and the environment is configured in an own about-file, it is not allowed for an\n<em>app</em>-file to override any of the environment specific options. Options that can only be set in the <em>global</em> file or in\nan <em>env</em> file will be described in a section called \"About files\" and options that can also be set in the <em>base</em> files\nand <em>app</em> files will be describe in a section called \"Application files\".</p>\n<h4 id=\"about-files\"><a href=\"#about-files\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About files</h4>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>required</th>\n<th>default</th>\n<th>substitution</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>affiliation</td>\n<td>Yes</td>\n<td></td>\n<td>affiliation</td>\n<td>Used to group the project for resource monitoring. All projects start with affiliation. lower case letters max length 10. Required.</td>\n</tr>\n<tr>\n<td>envName</td>\n<td></td>\n<td>$folderName</td>\n<td>env</td>\n<td>Change the name of the project. Note that the default value here is the actual name of the folder where the app file is. This option must be specified in either global or env file.</td>\n</tr>\n<tr>\n<td>env/name</td>\n<td></td>\n<td></td>\n<td>env</td>\n<td>An alias for envName</td>\n</tr>\n<tr>\n<td>env/ttl</td>\n<td></td>\n<td></td>\n<td>No</td>\n<td>Set a time duration in format 1d, 12h that indicate how long until this namespace should be deleted</td>\n</tr>\n<tr>\n<td>permissions/admin</td>\n<td>Yes</td>\n<td></td>\n<td>No</td>\n<td>The groups in OpenShift that will have the admin role for the given project. Can either be an array or a space delimited string. This option must be specified in either global or env file. Required.</td>\n</tr>\n<tr>\n<td>permissions/view</td>\n<td></td>\n<td></td>\n<td>No</td>\n<td>The groups in OpenShift that will have the view role for the given project. Can either be an array or a space delimited string. This option must be specified in either global or env file.</td>\n</tr>\n<tr>\n<td>permissions/adminServiceAccount</td>\n<td></td>\n<td></td>\n<td>No</td>\n<td>The service accounts in OpenShift that will have the admin role for the given project. Can either be an array or a space delimited string. This option must be specified in either global or env file.</td>\n</tr>\n</tbody>\n</table>\n<p>At least one of the groups in permissions/admin must have a user in it.</p>\n<h4 id=\"application-files\"><a href=\"#application-files\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Application files</h4>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>required</th>\n<th>default</th>\n<th>substitution</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>schemaVersion</td>\n<td>Yes</td>\n<td></td>\n<td>No</td>\n<td>All files in a given AuroraConfig must share a schemaVersion. For now only v1 is supported, it is here in case we need to break compatibility. Required.</td>\n</tr>\n<tr>\n<td>type</td>\n<td>Yes</td>\n<td></td>\n<td>No</td>\n<td><a href=\"#deployment_types\">See Deployment Types</a></td>\n</tr>\n<tr>\n<td>applicationPlatform</td>\n<td></td>\n<td>java</td>\n<td>No</td>\n<td>Specify application platform. java or web are valid platforms. Is only used if type is deploy/development.</td>\n</tr>\n<tr>\n<td>name</td>\n<td></td>\n<td>$baseFileName</td>\n<td>name</td>\n<td>The name of the application. All objects created in the cluster will get an app label with this name. Cannot be longer then 40 (alphanumeric -). Note that the default value here is the actual name of the base file.</td>\n</tr>\n<tr>\n<td>cluster</td>\n<td>Yes</td>\n<td></td>\n<td>cluster</td>\n<td>What cluster should the application be deployed to. Must be a valid cluster name.</td>\n</tr>\n<tr>\n<td>ttl</td>\n<td></td>\n<td></td>\n<td>No</td>\n<td>Set a time duration in format 1d, 12h that indicate how long until this application should be deleted</td>\n</tr>\n<tr>\n<td>version</td>\n<td>Yes</td>\n<td></td>\n<td>No</td>\n<td>Version of the application to run. Can be set to any of the <a href=\"https://skatteetaten.github.io/aurora/documentation/openshift/#deployment-and-patching-strategy\">valid version strategies</a>. Version is not required for template/localTemplate files</td>\n</tr>\n<tr>\n<td>segment</td>\n<td></td>\n<td></td>\n<td>segment</td>\n<td>The segment the application exist in.</td>\n</tr>\n<tr>\n<td>message</td>\n<td></td>\n<td></td>\n<td>message</td>\n<td>An message that will be added to the ApplicationDeployment CRD.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"a-namedeployment_types-adeployment-types\"><a href=\"#a-namedeployment_types-adeployment-types\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a name=\"deployment_types\" ></a>Deployment Types</h3>\n<p>The configuration option <code class=\"language-text\">type</code> indicates the deployment type the application has. The value of this field affects\nwhat other configuration options are available for that application. The deployment type determines primarily how\nthe objects that supports the application on OpenShift are generated, but it also affects the different types of\nintegrations that are supported.</p>\n<h4 id=\"deploy\"><a href=\"#deploy\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>deploy</h4>\n<p>The deploy deployment type is used for deploying applications using the conventions from the Aurora Platform. You can\nread more about these conventions here: <a href=\"https://skatteetaten.github.io/aurora/documentation/openshift/#how-we-develop-and-build-our-applications\">How we Develop and Build our Applications</a>.\nThis is the deployment type that will be most commonly used when deploying internally built applications. This will\nprovide integrations with the rest of the NTAs infrastructure and generate the necessary objects to OpenShift to support\nthe application.</p>\n<h4 id=\"development\"><a href=\"#development\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>development</h4>\n<p>The development deployment type is similar to the release deployment type but it will not deploy a prebuilt image and\ninstead create an OpenShift BuildConfig that can be used to build ad hoc images from DeliveryBundles from your local\ndevelopment machine.</p>\n<p>This will usually significantly reduce the time needed to get code from a development machine running on OpenShift\ncompared to, for instance, a CI/CD pipeline.</p>\n<h4 id=\"template\"><a href=\"#template\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>template</h4>\n<p>Supports deploying an application from a template available on the cluster. See <a href=\"#template_dev_guidelines\">Guidelines for developing templates</a>.</p>\n<h4 id=\"localtemplate\"><a href=\"#localtemplate\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>localTemplate</h4>\n<p>Supports deploying an application from a template available in the AuroraConfig folder. See <a href=\"#template_dev_guidelines\">Guidelines for developing templates</a>.</p>\n<h3 id=\"configuration-for-deployment-types-deploy-and-development\"><a href=\"#configuration-for-deployment-types-deploy-and-development\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration for Deployment Types \"deploy\" and \"development\"</h3>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>releaseTo</td>\n<td></td>\n<td>Used to release a given version as a shared tag in the docker registry. Other env can then use it in 'version'. NB! Must be manually updated with AO/Aurora Konsoll</td>\n</tr>\n<tr>\n<td>debug</td>\n<td>false</td>\n<td>Toggle to enable remote debugging on port 5005. Port forward this port locally and setup remote debugging in your Java IDE.</td>\n</tr>\n<tr>\n<td>deployStrategy/type</td>\n<td>rolling</td>\n<td>Specify type of deployment, either rolling or recreate</td>\n</tr>\n<tr>\n<td>deployStrategy/timeout</td>\n<td>180</td>\n<td>Set timeout value in seconds for deployment process</td>\n</tr>\n<tr>\n<td>resources/cpu/min</td>\n<td>10m</td>\n<td>Specify minimum/request cpu. See <a href=\"https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-cpu\">kubernetes_docs</a> for potential values</td>\n</tr>\n<tr>\n<td>resources/cpu/max</td>\n<td>2000m</td>\n<td>Specify maximum/limit cpu.</td>\n</tr>\n<tr>\n<td>resources/memory/min</td>\n<td>128Mi</td>\n<td>Specify minimum/request memory. See <a href=\"https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-memory\">kubernetes docs</a> for potential values</td>\n</tr>\n<tr>\n<td>resources/memory/max</td>\n<td>512Mi</td>\n<td>Specify maximum/limit memory. By default 25% of this will be set to XMX in java.</td>\n</tr>\n<tr>\n<td>groupId</td>\n<td></td>\n<td>groupId for your application. Max 200 length. Required if deploy/development</td>\n</tr>\n<tr>\n<td>artifactId</td>\n<td>$fileName</td>\n<td>artifactId for your application. Max 50 length</td>\n</tr>\n<tr>\n<td>splunkIndex</td>\n<td></td>\n<td>Set to a valid splunk-index to log to splunk. Only valid if splunk is enabled in the Aurora API</td>\n</tr>\n<tr>\n<td>serviceAccount</td>\n<td></td>\n<td>Set to an existing serviceAccount if you need special privileges</td>\n</tr>\n<tr>\n<td>prometheus</td>\n<td>true</td>\n<td>Toggle to false if application do not have Prometheus metrics</td>\n</tr>\n<tr>\n<td>prometheus/path</td>\n<td>/prometheus</td>\n<td>Change the path of where prometheus is exposed</td>\n</tr>\n<tr>\n<td>prometheus/port</td>\n<td>8081</td>\n<td>Change the port of where prometheus is exposed</td>\n</tr>\n<tr>\n<td>management</td>\n<td>true</td>\n<td>Toggle of if your application does not expose an management interface</td>\n</tr>\n<tr>\n<td>management/path</td>\n<td>/actuator</td>\n<td>Change the path of where the management interface is exposed</td>\n</tr>\n<tr>\n<td>management/port</td>\n<td>8081</td>\n<td>Change the port of where the management interface is exposed</td>\n</tr>\n<tr>\n<td>readiness</td>\n<td>true</td>\n<td>Toggle to false to turn off default readiness check</td>\n</tr>\n<tr>\n<td>readiness/path</td>\n<td></td>\n<td>Set to a path to do a GET request to that path as a readiness check</td>\n</tr>\n<tr>\n<td>readiness/port</td>\n<td>8080</td>\n<td>If no path present readiness will check if this port is open</td>\n</tr>\n<tr>\n<td>readiness/delay</td>\n<td>10</td>\n<td>Number of seconds to wait before running readiness check</td>\n</tr>\n<tr>\n<td>readiness/timeout</td>\n<td>1</td>\n<td>Number of seconds timeout before giving up readiness</td>\n</tr>\n<tr>\n<td>liveness</td>\n<td>false</td>\n<td>Toggle to true to enable liveness check</td>\n</tr>\n<tr>\n<td>liveness/path</td>\n<td></td>\n<td>Set to a path to do a GET request to that path as a liveness check</td>\n</tr>\n<tr>\n<td>liveness/port</td>\n<td>8080</td>\n<td>If no path present liveness will check if this port is open</td>\n</tr>\n<tr>\n<td>liveness/delay</td>\n<td>10</td>\n<td>Number of seconds to wait before running liveness check</td>\n</tr>\n<tr>\n<td>liveness/timeout</td>\n<td>1</td>\n<td>Number of seconds timeout before giving up liveness</td>\n</tr>\n<tr>\n<td>replicas</td>\n<td>1</td>\n<td>Number of replicas of this application to run.</td>\n</tr>\n<tr>\n<td>pause</td>\n<td>false</td>\n<td>Toggle to pause an application. This will scale it down to 0 and add a label showing it is paused.</td>\n</tr>\n<tr>\n<td>toxiproxy</td>\n<td>false</td>\n<td>Toxiproxy feature toggle using default version</td>\n</tr>\n<tr>\n<td>toxiproxy/version</td>\n<td>2.1.3</td>\n<td>Toxiproxy version</td>\n</tr>\n<tr>\n<td>config</td>\n<td></td>\n<td>Contains a collection of application configuration variables. The variables are passed on as environment variables to the container. Otherwise, they are ignored by the platform, and it is up to the application to interpret them. Note: If you are using JSON, then both key and value should be enclosed in double quotes</td>\n</tr>\n</tbody>\n</table>\n<p>For development flow the following configuration properties are available to specify how to build the image locally</p>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>builder/name</td>\n<td>architect</td>\n<td>Name of the builder image that is used to run the build</td>\n</tr>\n<tr>\n<td>builder/version</td>\n<td>1</td>\n<td>Version of the builder image to use. NB! This must be a tag in the architect imagestream</td>\n</tr>\n<tr>\n<td>baseImage/name</td>\n<td></td>\n<td>Name of the baseImage to use,</td>\n</tr>\n<tr>\n<td>baseImage/version</td>\n<td></td>\n<td>Version of the baseImage to use.NB! This must be a tag in the baseImage imagestream</td>\n</tr>\n</tbody>\n</table>\n<p>The following baseImage are in use at NTA</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>version</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>wrench8</td>\n<td>1</td>\n<td>Nodejs8 &#x26; Nginx</td>\n</tr>\n<tr>\n<td>wrench10</td>\n<td>1</td>\n<td>Nodejs10 &#x26; Nginx</td>\n</tr>\n<tr>\n<td>wingnut8</td>\n<td>1</td>\n<td>OpenJdk 8</td>\n</tr>\n<tr>\n<td>wingnut11</td>\n<td>1</td>\n<td>OpenJDK 11</td>\n</tr>\n<tr>\n<td>yeaster</td>\n<td>1</td>\n<td>Oracle Jdk8</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"configuration-for-deployment-types-template-and-localtemplate\"><a href=\"#configuration-for-deployment-types-template-and-localtemplate\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration for Deployment Types \"template\" and \"localTemplate\"</h3>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>template</td>\n<td></td>\n<td>Name of template in default namespace to use. This is required if type is template</td>\n</tr>\n<tr>\n<td>templateFile</td>\n<td></td>\n<td>Set the location of a local template file. It should be in the templates subfolder. This is required if type is localTemplate</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">parameters/&lt;KEY&gt;</code></td>\n<td></td>\n<td>The parameters option is used to set values for parameters in the template. If the template has either of the parameters VERSION, NAME, SPLUNK_INDEX or REPLICAS, the values of these parameters will be set from the standard version, name and replicas AuroraConfig options.</td>\n</tr>\n<tr>\n<td>replicas</td>\n<td></td>\n<td>If set will override replicas in template</td>\n</tr>\n<tr>\n<td>resources/cpu/min</td>\n<td></td>\n<td>Specify minimum/request cpu. 1000m is 1 core. see <a href=\"https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-cpu\">kubernetes_docs</a></td>\n</tr>\n<tr>\n<td>resources/cpu/max</td>\n<td></td>\n<td>Specify maximum/limit cpu.</td>\n</tr>\n<tr>\n<td>resources/memory/min</td>\n<td></td>\n<td>Specify minimum/request memory. See <a href=\"https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-memory\">kubernetes docs</a></td>\n</tr>\n<tr>\n<td>resources/memory/max</td>\n<td></td>\n<td>Specify maximum/limit memory. By default 25% of this will be set to XMX in java.</td>\n</tr>\n</tbody>\n</table>\n<p>Note that resources and replicas have no default values for templates. If they are set they will be applied if not the value\nin the template will be used.</p>\n<h3 id=\"exposing-an-application-via-http\"><a href=\"#exposing-an-application-via-http\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exposing an application via HTTP</h3>\n<p>The default behavior is that the application is only visible to other application in the same namespace using\nits service name.</p>\n<p>In order to control routes into the application the following fields can be used.</p>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>route</td>\n<td>false</td>\n<td>Toggle to expose application via HTTP. Routes can also be configured with expanded syntax. And routeDefault can be set for all routes. See below.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">route/&lt;routename&gt;/host</code></td>\n<td></td>\n<td>Set the host of a route according to the given pattern. If not specified the default will be routeDefault/host</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">route/&lt;routename&gt;/path</code></td>\n<td></td>\n<td>Set to create a path based route. You should use the same name/affiliation/env/separator combination for all path based routes to get the same URL</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">route/&lt;routename&gt;/annotations/&lt;key&gt;</code></td>\n<td></td>\n<td>Set annotations for a given route. Note that you should use | instead of / in annotation keys. so 'haproxy.router.openshift.io | balance'. See <a href=\"https://docs.openshift.com/container-platform/3.10/architecture/networking/routes.html#route-specific-annotations\">route annotations</a> for some options.</td>\n</tr>\n<tr>\n<td>routeDefaults/host</td>\n<td>@name@-@affiliation@-@env@                       </td>\n<td>Set the host of a route according to the given pattern.</td>\n</tr>\n<tr>\n<td>routeDefaults/annotations/<key></td>\n<td></td>\n<td>Set annotations for a given route. Note that you should use | instead of / in annotation keys. so 'haproxy.router.openshift.io | balance'. See <a href=\"https://docs.openshift.com/container-platform/3.10/architecture/networking/routes.html#route-specific-annotations\">route annotations</a> for some options.</td>\n</tr>\n</tbody>\n</table>\n<p>Route annotations are usable for template types but you need to create a Service with name after the NAME parameter yourself.</p>\n<h3 id=\"managing-secrets\"><a href=\"#managing-secrets\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Managing Secrets</h3>\n<p>In order to provide sensitive data to an application (i.e. passwords that cannot be stored directly in the configuration block of the AuroraConfig) it is possible to\naccess Vaults that has been created with the <code class=\"language-text\">ao vault</code> command (see internal link\n<a href=\"https://wiki.sits.no/pages/viewpage.action?pageId=143517331#AO(AuroraOpenShiftCLI)-AOVault\">https://wiki.sits.no/pages/viewpage.action?pageId=143517331#AO(AuroraOpenShiftCLI)-AOVault</a>). You can access the vaults in two different ways; as a\n<em>mount</em> or via the <em>secretVault</em> option.</p>\n<p>If a Vault is accessed via the secretVault option and the vault contains a properties file the contents of that file will be made available as\nenvironment variables for the application. Example;</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PASSWORD=s3cr3t\nENCRYPTION_KEY=8cdca234-9a3b-11e8-9eb6-529269fb1459</code></pre></div>\n<p>If you want to mount additional Vaults or access vault files directly this can be done with mounting it as a volume. See the next section for more details.</p>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">secretVaults/&lt;svName&gt;/name</code></td>\n<td>$svName</td>\n<td>Specify full secret vault that will be mounted under default secret location.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">secretVaults/&lt;svName&gt;/enabled</code></td>\n<td>true</td>\n<td>Set this to false to disable.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">secretVaults/&lt;svName&gt;/file</code></td>\n<td>latest.properties</td>\n<td>File in vault that will be used for fetching properties.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">secretVaults/&lt;svName&gt;/keys</code></td>\n<td></td>\n<td>An array of keys from the latest.properties file in the vault you want to include.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">secretVaults/&lt;svName&gt;/keyMappings</code></td>\n<td></td>\n<td>An map of key -> value that will rewrite the key in the secret to another ENV var name</td>\n</tr>\n</tbody>\n</table>\n<p>Note that it is possible to fetch multiple files from the same vault, the <code class=\"language-text\">svName</code> must be different for each one and you must set name to the same.</p>\n<p>The old way of specifying secretVaults (detailed below is deprecated). There will be a migration feature soon. This configuration pattern only suppored\na single vault/file.</p>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>secretVault</td>\n<td></td>\n<td>Specify full secret vault that will be mounted under default secret location.</td>\n</tr>\n<tr>\n<td>secretVault/name</td>\n<td></td>\n<td>Used instead of secretVault if you want advanced configuration</td>\n</tr>\n<tr>\n<td>secretVault/keys</td>\n<td></td>\n<td>An array of keys from the latest.properties file in the vault you want to include.</td>\n</tr>\n<tr>\n<td>secretVault/keyMappings</td>\n<td></td>\n<td>An map of key -> value that will rewrite the key in the secret to another ENV var name</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"mounting-volumes\"><a href=\"#mounting-volumes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mounting volumes</h3>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">mounts/&lt;mountName&gt;/type</code></td>\n<td></td>\n<td>One of Secret, ConfigMap, PVC. Required for each mount.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">mounts/&lt;mountName&gt;/path</code></td>\n<td></td>\n<td>Path to the volume in the container. Required for each mount.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">mounts/&lt;mountName&gt;/mountName</code></td>\n<td><code class=\"language-text\">&lt;mountName&gt;</code></td>\n<td>Override the name of the mount in the container.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">mounts/&lt;mountName&gt;/volumeName</code></td>\n<td><code class=\"language-text\">&lt;mountName&gt;</code></td>\n<td>Override the name of the volume in the DeploymentConfig.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">mounts/&lt;mountName&gt;/exists</code></td>\n<td>false</td>\n<td>If this is set to true the existing resource must exist already.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">mounts/&lt;mountName&gt;/content</code></td>\n<td></td>\n<td>If type is ConfigMap, set this to a content that will be put in that Volume. Exist must be true.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">mounts/&lt;mountName&gt;/content</code></td>\n<td></td>\n<td>If type is ConfigMap, set this to a content that will be put in that Volume. Exist must be true.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">mounts/&lt;mountName&gt;/secretVault</code></td>\n<td></td>\n<td>The name of the Vault to mount. This will mount the entire contents of the specified vault at the specified path. Type must be Secret, Exist false.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"nta-specific-integrations\"><a href=\"#nta-specific-integrations\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NTA specific integrations</h3>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>webseal</td>\n<td>false</td>\n<td>Toggle to expose application through WebSeal.</td>\n</tr>\n<tr>\n<td>webseal/host</td>\n<td></td>\n<td>Set this to change the default prefix in WebSeal</td>\n</tr>\n<tr>\n<td>webseal/roles</td>\n<td></td>\n<td>Set roles required to access this route. This can either be set as CSV or as an array of strings</td>\n</tr>\n<tr>\n<td>certificate</td>\n<td>false</td>\n<td>Toggle to add a certificate with CommonName $groupId.$name.</td>\n</tr>\n<tr>\n<td>certificate/commonName</td>\n<td></td>\n<td>Generate an STS certificate with the given commonName.</td>\n</tr>\n</tbody>\n</table>\n<p>NTA has the following technologies that can be automated with the above fields</p>\n<ul>\n<li>Webseal is used for client traffic from within NTA to reach an application. Internal tax workers have roles that can be added to limit who can access the application</li>\n<li>STS certificate: An SSL certificate with a given commonName is used to identify applications to secure traffic between them</li>\n</ul>\n<p>These integrations are available for all types however note that if you want to use webseal with a template type you need to create a Service with default ports named after the name parameter</p>\n<h3 id=\"nta-dbh-integration\"><a href=\"#nta-dbh-integration\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NTA Dbh integration</h3>\n<p><a href=\"https://github.com/skatteetaten/dbh\">dbh</a> is a service that enables an application to ask for credentials to a database schema.</p>\n<p>If there is no schema the default behavior is to create one.</p>\n<p>It is possible to change the default values for this process so that each application that wants a database can just use the <code class=\"language-text\">database=true</code> instruction</p>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>databaseDefaults/flavor</td>\n<td>ORACLE_MANAGED</td>\n<td>One of <code class=\"language-text\">ORACLE_MANAGED</code>, <code class=\"language-text\">POSTGRES_MANAGED</code>.</td>\n</tr>\n<tr>\n<td>databaseDefaults/generate</td>\n<td>true</td>\n<td>Set this to false to avoid generating a new schema if your lables does not match an existing one</td>\n</tr>\n<tr>\n<td>databaseDefaults/name</td>\n<td>@name@</td>\n<td>The default name to given a database when using database=true</td>\n</tr>\n<tr>\n<td>databaseDefaults/instance/name</td>\n<td></td>\n<td>The name of the instance you want to use for yor db schemas</td>\n</tr>\n<tr>\n<td>databaseDefaults/instance/fallback</td>\n<td>true</td>\n<td>If your instance does not match by labels, a fallback instance will be used if available. Default is true for ORACLE<em>MANAGED and false for POSTGRES</em>MANAGED</td>\n</tr>\n<tr>\n<td>databaseDefaults/instance/labels/<key></td>\n<td></td>\n<td>Set key=value pair that will be sent when matching database instances. Default is affiliation=@affiliation@</td>\n</tr>\n<tr>\n<td>database</td>\n<td>false</td>\n<td>Toggle this to add a database with $name to your application.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">database/&lt;name&gt;</code></td>\n<td></td>\n<td>Simplified config for multiple databases.If you want to add multiple databases specify a name for each. Set to 'auto' for auto generation or a given ID to pin it.</td>\n</tr>\n</tbody>\n</table>\n<p>If you want to change the default configuration for one application you need to use the expanded syntax</p>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">database/&lt;name&gt;/flavor</code></td>\n<td>$databaseDefaults/flavor</td>\n<td>Override default flavor.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">database/&lt;name&gt;/name</code></td>\n<td><name></td>\n<td>Override the name of the database.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">database/&lt;name&gt;/id</code></td>\n<td></td>\n<td>Set the id of the database to get an exact match.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">database/&lt;name&gt;/generate</code></td>\n<td>$databaseDefaults/generate</td>\n<td>Override default generate.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">database/&lt;name&gt;/instance/name</code></td>\n<td>$databaseDefaults/instance/name</td>\n<td>Override default instance/name.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">database/&lt;name&gt;/instance/fallback</code></td>\n<td>$databaseDefaults/instance/fallback</td>\n<td>Override default instance/fallback.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">database/&lt;name&gt;/instnace/labels/&lt;key&gt;</code></td>\n<td></td>\n<td>Add/override labels for instance.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"example-configuration\"><a href=\"#example-configuration\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example configuration</h2>\n<h3 id=\"simple-reference-application\"><a href=\"#simple-reference-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Simple reference-application</h3>\n<p>Below is an example of how you could configure an instance of the <a href=\"https://github.com/skatteetaten/openshift-reference-springboot-server\">reference application</a></p>\n<p>about.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">schemaVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">affiliation</span><span class=\"token punctuation\">:</span> paas\n<span class=\"token key atrule\">permissions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>PAAS_OPS<span class=\"token punctuation\">,</span> PAAS_DEV<span class=\"token punctuation\">]</span>\n<span class=\"token key atrule\">splunkIndex</span><span class=\"token punctuation\">:</span> paas<span class=\"token punctuation\">-</span>test</code></pre></div>\n<p>reference.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">groupId</span><span class=\"token punctuation\">:</span> no.skatteetaten.aurora.openshift\n<span class=\"token key atrule\">artifactId</span><span class=\"token punctuation\">:</span> openshift<span class=\"token punctuation\">-</span>reference<span class=\"token punctuation\">-</span>springboot<span class=\"token punctuation\">-</span>server\n<span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> deploy\n<span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n<span class=\"token key atrule\">certificate</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">route</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">FOO</span><span class=\"token punctuation\">:</span> BAR</code></pre></div>\n<p>dev/about.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">cluster</span><span class=\"token punctuation\">:</span> dev</code></pre></div>\n<p>dev/reference.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">FOO</span><span class=\"token punctuation\">:</span> BAZ</code></pre></div>\n<p>The complete config is then evaluated as</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">schemaVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">affiliation</span><span class=\"token punctuation\">:</span> paas\n<span class=\"token key atrule\">permissions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>PAAS_OPS<span class=\"token punctuation\">,</span> PAAS_DEV<span class=\"token punctuation\">]</span>\n<span class=\"token key atrule\">splunkIndex</span><span class=\"token punctuation\">:</span> paas<span class=\"token punctuation\">-</span>test\n<span class=\"token key atrule\">groupId</span><span class=\"token punctuation\">:</span> no.skatteetaten.aurora.openshift\n<span class=\"token key atrule\">artifactId</span><span class=\"token punctuation\">:</span> openshift<span class=\"token punctuation\">-</span>reference<span class=\"token punctuation\">-</span>springboot<span class=\"token punctuation\">-</span>server\n<span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> deploy\n<span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n<span class=\"token key atrule\">certificate</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">route</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">FOO</span><span class=\"token punctuation\">:</span> BAZ\n<span class=\"token key atrule\">cluster</span><span class=\"token punctuation\">:</span> dev</code></pre></div>\n<h3 id=\"applying-template-with-nta-integrations\"><a href=\"#applying-template-with-nta-integrations\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Applying template with NTA integrations</h3>\n<p>about.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">schemaVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">affiliation</span><span class=\"token punctuation\">:</span> paas\n<span class=\"token key atrule\">permissions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>PAAS_OPS<span class=\"token punctuation\">,</span> PAAS_DEV<span class=\"token punctuation\">]</span>\n<span class=\"token key atrule\">splunkIndex</span><span class=\"token punctuation\">:</span> paas<span class=\"token punctuation\">-</span>test</code></pre></div>\n<p>sample-atomhopper.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> template\n<span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> aurora<span class=\"token punctuation\">-</span>atomhopper<span class=\"token punctuation\">-</span>1.0.0\n<span class=\"token key atrule\">databaseDefaults</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">flavor</span><span class=\"token punctuation\">:</span> POSTGRES_MANAGED\n<span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">route</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">parameters</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">FEED_NAME</span><span class=\"token punctuation\">:</span> feed\n  <span class=\"token key atrule\">DB_NAME</span><span class=\"token punctuation\">:</span> atomhopper\n  <span class=\"token key atrule\">DOMAIN_NAME</span><span class=\"token punctuation\">:</span> localhost</code></pre></div>\n<p>dev/about.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">cluster</span><span class=\"token punctuation\">:</span> dev</code></pre></div>\n<p>dev/sample-atomhopper.yaml</p>\n<p>empty file</p>\n<p>The complete config is then evaluated as</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">schemaVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">affiliation</span><span class=\"token punctuation\">:</span> paas\n<span class=\"token key atrule\">permissions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>PAAS_OPS<span class=\"token punctuation\">,</span> PAAS_DEV<span class=\"token punctuation\">]</span>\n<span class=\"token key atrule\">splunkIndex</span><span class=\"token punctuation\">:</span> paas<span class=\"token punctuation\">-</span>test\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> template\n<span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> aurora<span class=\"token punctuation\">-</span>atomhopper<span class=\"token punctuation\">-</span>1.0.0\n<span class=\"token key atrule\">databaseDefaults</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">flavor</span><span class=\"token punctuation\">:</span> POSTGRES_MANAGED\n<span class=\"token key atrule\">database</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">route</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">parameters</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">FEED_NAME</span><span class=\"token punctuation\">:</span> feed\n  <span class=\"token key atrule\">DB_NAME</span><span class=\"token punctuation\">:</span> atomhopper\n  <span class=\"token key atrule\">DOMAIN_NAME</span><span class=\"token punctuation\">:</span> localhost</code></pre></div>\n<h2 id=\"a-nametemplate_dev_guidelinesaguidelines-for-developing-templates\"><a href=\"#a-nametemplate_dev_guidelinesaguidelines-for-developing-templates\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a name=\"template_dev_guidelines\"></a>Guidelines for developing templates</h2>\n<p>When creating templates the following guidelines should be followed:</p>\n<ul>\n<li>include the following parameters VERSION, NAME and if appropriate REPLICAS. They will be populated from relevant AuroraConfig fields</li>\n<li>the following labels will be added to the template: app, affiliation, updatedBy</li>\n<li>if the template does not have a VERSION parameter it will not be upgradable from internal web tools</li>\n<li>Each container in the template will get additional ENV variables applied if NTA specific integrations are applied.</li>\n</ul>","fields":{"slug":"/documentation/aurora-config/"}}}]}},"pageContext":{}}